# -*- coding: utf-8 -*-
"""Personal Finance Tracker.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1euQR-hn7FgiqwB4sIO0Bpgblq6lud51h
"""

import pandas as pd
import matplotlib.pyplot as plt
import datetime
import os

def load_data(filename="finance_data.csv"):
    """4
    Creates a new DataFrame."""
    try:
        df = pd.read_csv(filename, index_col="Date", parse_dates=True)
    except FileNotFoundError:
        df = pd.DataFrame(columns=["Category", "Description", "Amount", "Type"])
        df.index.name = "Date"
    return df

def save_data(df, filename="finance_data.csv"):
    """Saves data to CSV."""
    df.to_csv(filename)

def add_transaction(df):
    """Adds a new transaction to the DataFrame."""
    date_str = input("Enter date (YYYY-MM-DD): ")
    try:
        date = datetime.datetime.strptime(date_str, "%Y-%m-%d").date()
    except ValueError:
        print("Invalid date format.")
        return df
    category = input("Enter category (e.g., Groceries, Rent, Salary): ")
    description = input("Enter description: ")
    while True:
        try:
            amount = float(input("Enter amount: "))
            break
        except ValueError:
            print("Invalid amount. Please enter a number.")
    transaction_type = input("Enter type (Income/Expense): ").capitalize()
    if transaction_type not in ["Income", "Expense"]:
      print("Invalid type. Please enter Income or Expense")
      return df

    new_transaction = pd.DataFrame({
        "Category": [category],
        "Description": [description],
        "Amount": [amount],
        "Type": [transaction_type]
    }, index=[date])

    return pd.concat([df, new_transaction])


def generate_report(df):
    """Generates a summary report."""
    if df.empty:
        print("No transactions recorded yet.")
        return
    print("\n--- Financial Report ---")
    print(df)
    print("\n--- Summary ---")
    print(df.groupby("Type")["Amount"].sum())
    print(df.groupby("Category")["Amount"].sum())

def visualize_data(df):
    """Visualizes spending patterns using matplotlib."""
    if df.empty:
      print("No data to visualize")
      return

    expenses = df[df['Type'] == 'Expense']
    if expenses.empty:
        print("No expenses recorded yet")
        return
    category_spending = expenses.groupby("Category")["Amount"].sum()
    plt.figure(figsize=(10, 6))
    category_spending.plot(kind="bar")
    plt.title("Spending by Category")
    plt.xlabel("Category")
    plt.ylabel("Amount")
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.show()

def main():
    """Main function to run the application."""
    filename = "finance_data.csv"
    df = load_data(filename)

    while True:
        print("\n--- Personal Finance Tracker ---")
        print("1. Add Transaction")
        print("2. Generate Report")
        print("3. Visualize Data")
        print("4. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            df = add_transaction(df)
            save_data(df, filename)
        elif choice == "2":
            generate_report(df)
        elif choice == "3":
            visualize_data(df)
        elif choice == "4":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()